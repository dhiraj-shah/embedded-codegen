name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  python-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --with dev

      - name: Run tests
        run: pytest -vv

      - name: Lint Python
        run: |
          pip install flake8 mypy black
          black --check .
          flake8 core cli
          mypy core cli

      - name: Build & smoke‚Äêrun x86
        run: |
          embedded-codegen --config config.yaml \
            --template-dir core/templates --out-dir out_x86 --target x86
          cd out_x86 && make

      - name: Build object
        run: embedded-codegen --config config.yaml --emit-obj out.o --target x86

      - name: Validate out.o
        run: readelf -h out.o | grep 'Machine:.*X86-64'

      - name: Smoke-test object
        run: ld -r -o /dev/null out.o


          #  docker-tests:
          #    runs-on: ubuntu-latest
          #    needs: python-tests
          #    steps:
          #      - uses: actions/checkout@v3
          #      - name: Build Docker image
          #        run: docker build -t embeddit-gen .
          #      - name: Smoke-run CLI in container
          #        run: |
          #          docker run --rm -v "$GITHUB_WORKSPACE":/app embeddit-gen \
          #            embedded-codegen --config config.yaml --template-dir core/templates --target x86
          #          docker run --rm -v "$GITHUB_WORKSPACE":/app embeddit-gen \
          #            embedded-codegen --config config.yaml --target x86 --llvm-ir
          #      - name: Run pytest inside container
          #        run: docker run --rm -v "$GITHUB_WORKSPACE":/app embeddit-gen pytest -vv
